<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="37" passed="23" failed="14" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-20T00:54:35 ICT" name="Suite" finished-at="2023-08-20T01:03:41 ICT" duration-ms="546563">
    <groups>
    </groups>
    <test started-at="2023-08-20T00:54:35 ICT" name="AutoTestForWebsiteBookStore" finished-at="2023-08-20T01:03:41 ICT" duration-ms="546563">
      <class name="TestSuite.OrderProductWithoutLogin">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:54:35 ICT" name="beforeSuite" finished-at="2023-08-20T00:54:35 ICT" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:54:35 ICT" name="beforeClass" finished-at="2023-08-20T00:54:35 ICT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:54:35 ICT" name="setUpClass" finished-at="2023-08-20T00:54:42 ICT" duration-ms="7402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:54:42 ICT" name="setUpMethod" finished-at="2023-08-20T00:54:55 ICT" duration-ms="12390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_01() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_01()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:54:55 ICT" name="TC_09_01" finished-at="2023-08-20T00:55:00 ICT" duration-ms="5449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_01 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:00 ICT" name="afterMethod" finished-at="2023-08-20T00:55:00 ICT" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_01 status=SUCCESS method=OrderProductWithoutLogin.TC_09_01()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_01() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:00 ICT" name="setUpMethod" finished-at="2023-08-20T00:55:10 ICT" duration-ms="9727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_02() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_02()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:10 ICT" name="TC_09_02" finished-at="2023-08-20T00:55:15 ICT" duration-ms="4872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_02 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:15 ICT" name="afterMethod" finished-at="2023-08-20T00:55:15 ICT" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_02 status=SUCCESS method=OrderProductWithoutLogin.TC_09_02()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_02() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:15 ICT" name="setUpMethod" finished-at="2023-08-20T00:55:24 ICT" duration-ms="9213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_03() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_03()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:24 ICT" name="TC_09_03" finished-at="2023-08-20T00:55:30 ICT" duration-ms="5503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_03 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:30 ICT" name="afterMethod" finished-at="2023-08-20T00:55:30 ICT" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_03 status=SUCCESS method=OrderProductWithoutLogin.TC_09_03()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_03() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:30 ICT" name="setUpMethod" finished-at="2023-08-20T00:55:39 ICT" duration-ms="8845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_04() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_04()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:39 ICT" name="TC_09_04" finished-at="2023-08-20T00:55:44 ICT" duration-ms="4860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_04 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:44 ICT" name="afterMethod" finished-at="2023-08-20T00:55:44 ICT" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_04 status=SUCCESS method=OrderProductWithoutLogin.TC_09_04()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_04() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:44 ICT" name="setUpMethod" finished-at="2023-08-20T00:55:53 ICT" duration-ms="9507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_05() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_05()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:53 ICT" name="TC_09_05" finished-at="2023-08-20T00:55:58 ICT" duration-ms="4697" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_05 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:58 ICT" name="afterMethod" finished-at="2023-08-20T00:55:58 ICT" duration-ms="169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_05 status=SUCCESS method=OrderProductWithoutLogin.TC_09_05()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_05() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:55:58 ICT" name="setUpMethod" finished-at="2023-08-20T00:56:08 ICT" duration-ms="10203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_06() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_06()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:08 ICT" name="TC_09_06" finished-at="2023-08-20T00:56:13 ICT" duration-ms="4666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_06 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:13 ICT" name="afterMethod" finished-at="2023-08-20T00:56:13 ICT" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_06 status=SUCCESS method=OrderProductWithoutLogin.TC_09_06()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_06() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:13 ICT" name="setUpMethod" finished-at="2023-08-20T00:56:23 ICT" duration-ms="10036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_07() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_07()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:23 ICT" name="TC_09_07" finished-at="2023-08-20T00:56:28 ICT" duration-ms="4860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_07 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:28 ICT" name="afterMethod" finished-at="2023-08-20T00:56:28 ICT" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_07 status=SUCCESS method=OrderProductWithoutLogin.TC_09_07()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_07() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:28 ICT" name="setUpMethod" finished-at="2023-08-20T00:56:38 ICT" duration-ms="9557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_08() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_08()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:38 ICT" name="TC_09_08" finished-at="2023-08-20T00:56:43 ICT" duration-ms="5032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_08 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:43 ICT" name="afterMethod" finished-at="2023-08-20T00:56:43 ICT" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_08 status=SUCCESS method=OrderProductWithoutLogin.TC_09_08()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_08() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:43 ICT" name="setUpMethod" finished-at="2023-08-20T00:56:52 ICT" duration-ms="8860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_09() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_09()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:52 ICT" name="TC_09_09" finished-at="2023-08-20T00:56:57 ICT" duration-ms="4955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_09 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:57 ICT" name="afterMethod" finished-at="2023-08-20T00:56:57 ICT" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_09 status=SUCCESS method=OrderProductWithoutLogin.TC_09_09()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_09() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:56:57 ICT" name="setUpMethod" finished-at="2023-08-20T00:57:06 ICT" duration-ms="9409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_10() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_10()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:06 ICT" name="TC_09_10" finished-at="2023-08-20T00:57:11 ICT" duration-ms="4940" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Số điện thoại không quá 11 số"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Số điện thoại không quá 11 số"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_10(OrderProductWithoutLogin.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_10 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:11 ICT" name="afterMethod" finished-at="2023-08-20T00:57:11 ICT" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_10 status=FAILURE method=OrderProductWithoutLogin.TC_09_10()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_10() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:11 ICT" name="setUpMethod" finished-at="2023-08-20T00:57:21 ICT" duration-ms="9385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_11() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_11()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:21 ICT" name="TC_09_11" finished-at="2023-08-20T00:57:25 ICT" duration-ms="4579" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_11(OrderProductWithoutLogin.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_11 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:25 ICT" name="afterMethod" finished-at="2023-08-20T00:57:26 ICT" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_11 status=FAILURE method=OrderProductWithoutLogin.TC_09_11()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_11() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:26 ICT" name="setUpMethod" finished-at="2023-08-20T00:57:35 ICT" duration-ms="9331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_12() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_12()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:35 ICT" name="TC_09_12" finished-at="2023-08-20T00:57:40 ICT" duration-ms="4730" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_12(OrderProductWithoutLogin.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_12 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:40 ICT" name="afterMethod" finished-at="2023-08-20T00:57:40 ICT" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_12 status=FAILURE method=OrderProductWithoutLogin.TC_09_12()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_12() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:40 ICT" name="setUpMethod" finished-at="2023-08-20T00:57:49 ICT" duration-ms="9277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_13() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_13()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:49 ICT" name="TC_09_13" finished-at="2023-08-20T00:57:54 ICT" duration-ms="4597" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_13(OrderProductWithoutLogin.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_13 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:54 ICT" name="afterMethod" finished-at="2023-08-20T00:57:54 ICT" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_13 status=FAILURE method=OrderProductWithoutLogin.TC_09_13()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_13() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:57:54 ICT" name="setUpMethod" finished-at="2023-08-20T00:58:03 ICT" duration-ms="9472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_14() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_14()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:03 ICT" name="TC_09_14" finished-at="2023-08-20T00:58:08 ICT" duration-ms="4581" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_14(OrderProductWithoutLogin.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_14 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:08 ICT" name="afterMethod" finished-at="2023-08-20T00:58:08 ICT" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_14 status=FAILURE method=OrderProductWithoutLogin.TC_09_14()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_14() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:08 ICT" name="setUpMethod" finished-at="2023-08-20T00:58:18 ICT" duration-ms="9967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_15() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_15()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:18 ICT" name="TC_09_15" finished-at="2023-08-20T00:58:23 ICT" duration-ms="4624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_15 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:23 ICT" name="afterMethod" finished-at="2023-08-20T00:58:23 ICT" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_15 status=SUCCESS method=OrderProductWithoutLogin.TC_09_15()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_15() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:23 ICT" name="setUpMethod" finished-at="2023-08-20T00:58:32 ICT" duration-ms="9423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_16() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_16()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:32 ICT" name="TC_09_16" finished-at="2023-08-20T00:58:37 ICT" duration-ms="4826" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_16(OrderProductWithoutLogin.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_16 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:37 ICT" name="afterMethod" finished-at="2023-08-20T00:58:37 ICT" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_16 status=FAILURE method=OrderProductWithoutLogin.TC_09_16()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_16() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:37 ICT" name="setUpMethod" finished-at="2023-08-20T00:58:47 ICT" duration-ms="9382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_17() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_17()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:47 ICT" name="TC_09_17" finished-at="2023-08-20T00:58:52 ICT" duration-ms="4947" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Số điện thoại không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_17(OrderProductWithoutLogin.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_17 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:52 ICT" name="afterMethod" finished-at="2023-08-20T00:58:52 ICT" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_17 status=FAILURE method=OrderProductWithoutLogin.TC_09_17()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_17() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:58:52 ICT" name="setUpMethod" finished-at="2023-08-20T00:59:01 ICT" duration-ms="9382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_18() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_18()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:01 ICT" name="TC_09_18" finished-at="2023-08-20T00:59:06 ICT" duration-ms="4468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_18 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:06 ICT" name="afterMethod" finished-at="2023-08-20T00:59:06 ICT" duration-ms="142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_18 status=SUCCESS method=OrderProductWithoutLogin.TC_09_18()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_18() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:06 ICT" name="setUpMethod" finished-at="2023-08-20T00:59:16 ICT" duration-ms="9962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_19() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_19()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:16 ICT" name="TC_09_19" finished-at="2023-08-20T00:59:20 ICT" duration-ms="4779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_19 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:20 ICT" name="afterMethod" finished-at="2023-08-20T00:59:21 ICT" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_19 status=SUCCESS method=OrderProductWithoutLogin.TC_09_19()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_19() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:21 ICT" name="setUpMethod" finished-at="2023-08-20T00:59:30 ICT" duration-ms="9242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_20() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_20()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:30 ICT" name="TC_09_20" finished-at="2023-08-20T00:59:34 ICT" duration-ms="4534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_20 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:34 ICT" name="afterMethod" finished-at="2023-08-20T00:59:34 ICT" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_20 status=SUCCESS method=OrderProductWithoutLogin.TC_09_20()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_20() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:34 ICT" name="setUpMethod" finished-at="2023-08-20T00:59:44 ICT" duration-ms="9398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_21() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_21()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:44 ICT" name="TC_09_21" finished-at="2023-08-20T00:59:49 ICT" duration-ms="4850" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_21(OrderProductWithoutLogin.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_21 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:49 ICT" name="afterMethod" finished-at="2023-08-20T00:59:49 ICT" duration-ms="150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_21 status=FAILURE method=OrderProductWithoutLogin.TC_09_21()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_21() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:49 ICT" name="setUpMethod" finished-at="2023-08-20T00:59:58 ICT" duration-ms="9612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_22() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_22()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T00:59:58 ICT" name="TC_09_22" finished-at="2023-08-20T01:00:03 ICT" duration-ms="4592" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_22(OrderProductWithoutLogin.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_22 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:03 ICT" name="afterMethod" finished-at="2023-08-20T01:00:03 ICT" duration-ms="168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_22 status=FAILURE method=OrderProductWithoutLogin.TC_09_22()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_22() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:03 ICT" name="setUpMethod" finished-at="2023-08-20T01:00:13 ICT" duration-ms="9317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_23() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_23()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:13 ICT" name="TC_09_23" finished-at="2023-08-20T01:00:18 ICT" duration-ms="5049" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_23(OrderProductWithoutLogin.java:140)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_23 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:18 ICT" name="afterMethod" finished-at="2023-08-20T01:00:18 ICT" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_23 status=FAILURE method=OrderProductWithoutLogin.TC_09_23()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_23() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:18 ICT" name="setUpMethod" finished-at="2023-08-20T01:00:27 ICT" duration-ms="9447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_24() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_24()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:27 ICT" name="TC_09_24" finished-at="2023-08-20T01:00:32 ICT" duration-ms="4497" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_24(OrderProductWithoutLogin.java:145)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_24 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:32 ICT" name="afterMethod" finished-at="2023-08-20T01:00:32 ICT" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_24 status=FAILURE method=OrderProductWithoutLogin.TC_09_24()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_24() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:32 ICT" name="setUpMethod" finished-at="2023-08-20T01:00:41 ICT" duration-ms="9557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_25() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_25()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:41 ICT" name="TC_09_25" finished-at="2023-08-20T01:00:47 ICT" duration-ms="5152" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Email không hợp lệ"; Actual: "Cám ơn bạn. Đơn hàng của bạn đã được tiếp nhận."
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_25(OrderProductWithoutLogin.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_25 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:47 ICT" name="afterMethod" finished-at="2023-08-20T01:00:47 ICT" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_25 status=FAILURE method=OrderProductWithoutLogin.TC_09_25()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_25() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:47 ICT" name="setUpMethod" finished-at="2023-08-20T01:00:56 ICT" duration-ms="9354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_26() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_26()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:00:56 ICT" name="TC_09_26" finished-at="2023-08-20T01:01:01 ICT" duration-ms="4983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_26 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:01 ICT" name="afterMethod" finished-at="2023-08-20T01:01:01 ICT" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_26 status=SUCCESS method=OrderProductWithoutLogin.TC_09_26()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_26() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:01 ICT" name="setUpMethod" finished-at="2023-08-20T01:01:10 ICT" duration-ms="9195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_27() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_27()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:10 ICT" name="TC_09_27" finished-at="2023-08-20T01:01:16 ICT" duration-ms="5109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_27 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:16 ICT" name="afterMethod" finished-at="2023-08-20T01:01:16 ICT" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_27 status=SUCCESS method=OrderProductWithoutLogin.TC_09_27()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_27() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:16 ICT" name="setUpMethod" finished-at="2023-08-20T01:01:26 ICT" duration-ms="9832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_28() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_28()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:26 ICT" name="TC_09_28" finished-at="2023-08-20T01:01:30 ICT" duration-ms="4863" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Địa chỉ giao hàng không được để trống"; Actual: "Địa chỉ nhận hàng không được để trống"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Địa chỉ giao hàng không được để trống"; Actual: "Địa chỉ nhận hàng không được để trống"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_28(OrderProductWithoutLogin.java:165)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_28 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:30 ICT" name="afterMethod" finished-at="2023-08-20T01:01:31 ICT" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_28 status=FAILURE method=OrderProductWithoutLogin.TC_09_28()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_28() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:31 ICT" name="setUpMethod" finished-at="2023-08-20T01:01:40 ICT" duration-ms="9378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_29() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_29()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:40 ICT" name="TC_09_29" finished-at="2023-08-20T01:01:45 ICT" duration-ms="4942" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value is not correct: Expected: "Địa chỉ giao hàng không được để trống"; Actual: "Địa chỉ nhận hàng không được để trống"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value is not correct: Expected: "Địa chỉ giao hàng không được để trống"; Actual: "Địa chỉ nhận hàng không được để trống"
at org.testng.Assert.fail(Assert.java:97)
at Common.Utilities.assertString(Utilities.java:353)
at Common.Utilities.assertTextValue(Utilities.java:303)
at Common.Utilities.assertTextValueVisible(Utilities.java:310)
at CommonScreen.PaymentInfoScreen.orderProductWithoutLogin(PaymentInfoScreen.java:47)
at TestSuite.OrderProductWithoutLogin.TC_09_29(OrderProductWithoutLogin.java:170)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:131)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:687)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:140)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at org.testng.TestRunner.privateRun(TestRunner.java:724)
at org.testng.TestRunner.run(TestRunner.java:574)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:398)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:392)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:354)
at org.testng.SuiteRunner.run(SuiteRunner.java:302)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1142)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1064)
at org.testng.TestNG.runSuites(TestNG.java:994)
at org.testng.TestNG.run(TestNG.java:962)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_29 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:45 ICT" name="afterMethod" finished-at="2023-08-20T01:01:45 ICT" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_29 status=FAILURE method=OrderProductWithoutLogin.TC_09_29()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_29() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:45 ICT" name="setUpMethod" finished-at="2023-08-20T01:01:54 ICT" duration-ms="8934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_30() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_30()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:54 ICT" name="TC_09_30" finished-at="2023-08-20T01:01:59 ICT" duration-ms="4907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_30 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:59 ICT" name="afterMethod" finished-at="2023-08-20T01:01:59 ICT" duration-ms="151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_30 status=SUCCESS method=OrderProductWithoutLogin.TC_09_30()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_30() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:01:59 ICT" name="setUpMethod" finished-at="2023-08-20T01:02:09 ICT" duration-ms="9962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_31() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_31()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:09 ICT" name="TC_09_31" finished-at="2023-08-20T01:02:14 ICT" duration-ms="4676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_31 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:14 ICT" name="afterMethod" finished-at="2023-08-20T01:02:14 ICT" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_31 status=SUCCESS method=OrderProductWithoutLogin.TC_09_31()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_31() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:14 ICT" name="setUpMethod" finished-at="2023-08-20T01:02:23 ICT" duration-ms="9303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_32() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_32()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:23 ICT" name="TC_09_32" finished-at="2023-08-20T01:02:28 ICT" duration-ms="4818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_32 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:28 ICT" name="afterMethod" finished-at="2023-08-20T01:02:28 ICT" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_32 status=SUCCESS method=OrderProductWithoutLogin.TC_09_32()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_32() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:28 ICT" name="setUpMethod" finished-at="2023-08-20T01:02:37 ICT" duration-ms="9241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_33() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_33()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:37 ICT" name="TC_09_33" finished-at="2023-08-20T01:02:42 ICT" duration-ms="4733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_33 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:42 ICT" name="afterMethod" finished-at="2023-08-20T01:02:42 ICT" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_33 status=SUCCESS method=OrderProductWithoutLogin.TC_09_33()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_33() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:42 ICT" name="setUpMethod" finished-at="2023-08-20T01:02:52 ICT" duration-ms="10078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_34() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_34()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:52 ICT" name="TC_09_34" finished-at="2023-08-20T01:02:57 ICT" duration-ms="4448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_34 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:57 ICT" name="afterMethod" finished-at="2023-08-20T01:02:57 ICT" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_34 status=SUCCESS method=OrderProductWithoutLogin.TC_09_34()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_34() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:02:57 ICT" name="setUpMethod" finished-at="2023-08-20T01:03:06 ICT" duration-ms="9300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_35() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_35()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:06 ICT" name="TC_09_35" finished-at="2023-08-20T01:03:11 ICT" duration-ms="5222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_35 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:11 ICT" name="afterMethod" finished-at="2023-08-20T01:03:12 ICT" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_35 status=SUCCESS method=OrderProductWithoutLogin.TC_09_35()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_35() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:12 ICT" name="setUpMethod" finished-at="2023-08-20T01:03:21 ICT" duration-ms="9360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_36() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_36()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:21 ICT" name="TC_09_36" finished-at="2023-08-20T01:03:26 ICT" duration-ms="4725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_36 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:26 ICT" name="afterMethod" finished-at="2023-08-20T01:03:26 ICT" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_36 status=SUCCESS method=OrderProductWithoutLogin.TC_09_36()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_36() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUpMethod(java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:26 ICT" name="setUpMethod" finished-at="2023-08-20T01:03:35 ICT" duration-ms="9448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_37() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method signature="TC_09_37()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:35 ICT" name="TC_09_37" finished-at="2023-08-20T01:03:40 ICT" duration-ms="4755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_37 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:40 ICT" name="afterMethod" finished-at="2023-08-20T01:03:40 ICT" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_37 status=SUCCESS method=OrderProductWithoutLogin.TC_09_37()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestSuite.OrderProductWithoutLogin.TC_09_37() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestSuite.OrderProductWithoutLogin@9d5509a]" started-at="2023-08-20T01:03:40 ICT" name="afterClass" finished-at="2023-08-20T01:03:41 ICT" duration-ms="1198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestSuite.OrderProductWithoutLogin -->
    </test> <!-- AutoTestForWebsiteBookStore -->
  </suite> <!-- Suite -->
</testng-results>
